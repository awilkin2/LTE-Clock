// #
// # font12
// # Font Size: 7x12px
// #

// # 
// # Pseudocode for retrieving data for a specific character:
// # 
// # offset = ascii_code(character) - ascii_code(' ')
// # data = font12[lut[offset]]
// # 

#include "fonts.h"
//#include <avr/pgmspace.h>

// width = const(7)
// height = const(12)


static const uint8_t Font12_Table [] =
{
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x18, 0x18, 0x10, 0x10, 0x10, 0x00, 0x18, 0x18, 0x00, 0x00,
	0x00, 0x00, 0x28, 0x28, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x38, 0x38, 0xFC, 0x30, 0x30, 0xFC, 0x70, 0x70, 0x00, 0x00,
	0x00, 0x08, 0x3C, 0x60, 0x60, 0x30, 0x1C, 0x14, 0x14, 0x78, 0x00, 0x00,
	0x00, 0x00, 0x62, 0xE4, 0xE8, 0x70, 0x1C, 0x3C, 0x5C, 0x8C, 0x00, 0x00,
	0x00, 0x00, 0x38, 0x68, 0x48, 0x30, 0x74, 0xCC, 0xCC, 0x7A, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x10, 0x30, 0x20, 0x20, 0x20, 0x20, 0x20, 0x30, 0x10, 0x08,
	0x00, 0x20, 0x10, 0x18, 0x08, 0x08, 0x08, 0x08, 0x08, 0x18, 0x10, 0x20,
	0x00, 0x00, 0x10, 0x54, 0x38, 0x54, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x7C, 0x10, 0x10, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x30, 0x60,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00,
	0x00, 0x00, 0x04, 0x08, 0x08, 0x10, 0x10, 0x00, 0x20, 0x20, 0x40, 0x00,
	0x00, 0x00, 0x1C, 0x26, 0x66, 0x4A, 0x72, 0x62, 0x26, 0x3C, 0x00, 0x00,
	0x00, 0x00, 0x38, 0x58, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7C, 0x00, 0x00,
	0x00, 0x00, 0x38, 0x4C, 0x0C, 0x0C, 0x18, 0x30, 0x20, 0x7C, 0x00, 0x00,
	0x00, 0x00, 0x78, 0x0C, 0x0C, 0x38, 0x04, 0x04, 0x04, 0x78, 0x00, 0x00,
	0x00, 0x00, 0x18, 0x18, 0x28, 0x48, 0x88, 0xFC, 0x08, 0x08, 0x00, 0x00,
	0x00, 0x00, 0x7C, 0x40, 0x40, 0x7C, 0x04, 0x04, 0x0C, 0x78, 0x00, 0x00,
	0x00, 0x00, 0x1C, 0x20, 0x60, 0x7C, 0x64, 0x44, 0x64, 0x38, 0x00, 0x00,
	0x00, 0x00, 0x7C, 0x04, 0x08, 0x08, 0x10, 0x10, 0x30, 0x20, 0x00, 0x00,
	0x00, 0x00, 0x38, 0x6C, 0x6C, 0x38, 0x6C, 0x64, 0x64, 0x3C, 0x00, 0x00,
	0x00, 0x00, 0x38, 0x64, 0x44, 0x64, 0x34, 0x04, 0x0C, 0x70, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x30, 0x30, 0x30, 0x60,
	0x00, 0x00, 0x00, 0x04, 0x18, 0x30, 0x60, 0x30, 0x18, 0x04, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x40, 0x30, 0x18, 0x0C, 0x18, 0x30, 0x40, 0x00, 0x00,
	0x00, 0x00, 0x38, 0x0C, 0x04, 0x04, 0x3C, 0x00, 0x30, 0x30, 0x00, 0x00,
	0x00, 0x00, 0x1C, 0x66, 0x42, 0xDA, 0xBA, 0xBA, 0x9C, 0xC0, 0x40, 0x38,
	0x00, 0x00, 0x10, 0x28, 0x28, 0x28, 0x00, 0x7C, 0x44, 0x44, 0x00, 0x00,
	0x00, 0x00, 0x78, 0x4C, 0x4C, 0x78, 0x44, 0x44, 0x44, 0x78, 0x00, 0x00,
	0x00, 0x00, 0x1C, 0x20, 0x60, 0x60, 0x60, 0x60, 0x20, 0x3C, 0x00, 0x00,
	0x00, 0x00, 0x78, 0x4C, 0x44, 0x44, 0x44, 0x44, 0x4C, 0x78, 0x00, 0x00,
	0x00, 0x00, 0x78, 0x40, 0x40, 0x78, 0x40, 0x40, 0x40, 0x78, 0x00, 0x00,
	0x00, 0x00, 0x78, 0x40, 0x40, 0x78, 0x40, 0x40, 0x40, 0x40, 0x00, 0x00,
	0x00, 0x00, 0x3C, 0x60, 0xC0, 0xCC, 0xC4, 0xC4, 0x64, 0x3C, 0x00, 0x00,
	0x00, 0x00, 0x44, 0x44, 0x44, 0x7C, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00,
	0x00, 0x00, 0x7C, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x7C, 0x00, 0x00,
	0x00, 0x00, 0x78, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x38, 0x00, 0x00,
	0x00, 0x00, 0x44, 0x48, 0x48, 0x70, 0x70, 0x58, 0x48, 0x44, 0x00, 0x00,
	0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x78, 0x00, 0x00,
	0x00, 0x00, 0x44, 0x44, 0x28, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x64, 0x64, 0x64, 0x44, 0x44, 0x4C, 0x4C, 0x4C, 0x00, 0x00,
	0x00, 0x00, 0x78, 0x48, 0xCC, 0x84, 0x84, 0xCC, 0x48, 0x78, 0x00, 0x00,
	0x00, 0x00, 0x78, 0x44, 0x44, 0x44, 0x78, 0x40, 0x40, 0x40, 0x00, 0x00,
	0x00, 0x00, 0x38, 0x4C, 0xC4, 0xC4, 0xC4, 0xC4, 0x4C, 0x78, 0x18, 0x0C,
	0x00, 0x00, 0x7C, 0x44, 0x46, 0x44, 0x78, 0x44, 0x46, 0x42, 0x00, 0x00,
	0x00, 0x00, 0x3C, 0x60, 0x60, 0x30, 0x0C, 0x04, 0x04, 0x7C, 0x00, 0x00,
	0x00, 0x00, 0x7C, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00,
	0x00, 0x00, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x64, 0x38, 0x00, 0x00,
	0x00, 0x00, 0x44, 0x44, 0x44, 0x68, 0x28, 0x28, 0x38, 0x10, 0x00, 0x00,
	0x00, 0x00, 0x44, 0x44, 0x44, 0x54, 0x54, 0x64, 0x6C, 0x6C, 0x00, 0x00,
	0x00, 0x00, 0xC4, 0x48, 0x30, 0x30, 0x30, 0x28, 0x44, 0xC6, 0x00, 0x00,
	0x00, 0x00, 0xC2, 0x46, 0x24, 0x38, 0x18, 0x10, 0x10, 0x10, 0x00, 0x00,
	0x00, 0x00, 0x7C, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x7C, 0x00, 0x00,
	0x00, 0x00, 0x38, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x38,
	0x00, 0x00, 0x40, 0x20, 0x20, 0x00, 0x10, 0x10, 0x08, 0x08, 0x04, 0x00,
	0x00, 0x00, 0x38, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x38,
	0x00, 0x00, 0x10, 0x28, 0x2C, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
	0x00, 0x60, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x3C, 0x04, 0x3C, 0x64, 0x64, 0x3C, 0x00, 0x00,
	0x00, 0x00, 0x40, 0x40, 0x7C, 0x64, 0x44, 0x44, 0x64, 0x78, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x3C, 0x60, 0x60, 0x60, 0x60, 0x3C, 0x00, 0x00,
	0x00, 0x00, 0x04, 0x04, 0x3C, 0x64, 0x44, 0x44, 0x6C, 0x34, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x3C, 0x64, 0x7C, 0x60, 0x60, 0x3C, 0x00, 0x00,
	0x00, 0x00, 0x1E, 0x30, 0x20, 0xFC, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x3E, 0x64, 0x64, 0x7C, 0x60, 0x7C, 0x64, 0x7C,
	0x00, 0x00, 0x40, 0x40, 0x7C, 0x64, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00,
	0x00, 0x18, 0x18, 0x00, 0x70, 0x10, 0x10, 0x10, 0x10, 0x7C, 0x00, 0x00,
	0x00, 0x18, 0x18, 0x00, 0x78, 0x08, 0x08, 0x08, 0x08, 0x08, 0x18, 0x70,
	0x00, 0x00, 0x40, 0x40, 0x44, 0x4C, 0x78, 0x78, 0x4C, 0x44, 0x00, 0x00,
	0x00, 0x00, 0x70, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x7C, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x74, 0x7C, 0x54, 0x54, 0x54, 0x54, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x7C, 0x64, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x38, 0x64, 0x44, 0x44, 0x64, 0x38, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x7C, 0x64, 0x44, 0x44, 0x64, 0x78, 0x40, 0x40,
	0x00, 0x00, 0x00, 0x00, 0x3C, 0x64, 0x44, 0x44, 0x6C, 0x34, 0x04, 0x04,
	0x00, 0x00, 0x00, 0x00, 0x7C, 0x64, 0x40, 0x40, 0x40, 0x40, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x38, 0x60, 0x70, 0x18, 0x08, 0x78, 0x00, 0x00,
	0x00, 0x00, 0x20, 0x20, 0xF8, 0x20, 0x20, 0x20, 0x20, 0x38, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x44, 0x44, 0x6C, 0x3C, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x00, 0x28, 0x28, 0x10, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x40, 0x50, 0x50, 0x48, 0x6C, 0x24, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x6C, 0x28, 0x10, 0x28, 0x44, 0xC6, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x44, 0x44, 0x28, 0x28, 0x30, 0x10, 0x20, 0x60,
	0x00, 0x00, 0x00, 0x00, 0x7C, 0x08, 0x00, 0x00, 0x20, 0x7C, 0x00, 0x00,
	0x00, 0x00, 0x0C, 0x18, 0x10, 0x10, 0x70, 0x10, 0x10, 0x10, 0x18, 0x0C,
	0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
	0x00, 0x00, 0x60, 0x30, 0x10, 0x10, 0x1C, 0x10, 0x10, 0x10, 0x30, 0x60,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0xDC, 0x00, 0x00, 0x00, 0x00
};

// lut = [
	// 0, # Character 0x20 (32: ' ')
	// 12, # Character 0x21 (33: '!')
	// 24, # Character 0x22 (34: '"')
	// 36, # Character 0x23 (35: '#')
	// 48, # Character 0x24 (36: '$')
	// 60, # Character 0x25 (37: '%')
	// 72, # Character 0x26 (38: '&')
	// 84, # Character 0x27 (39: ''')
	// 96, # Character 0x28 (40: '(')
	// 108, # Character 0x29 (41: ')')
	// 120, # Character 0x2a (42: '*')
	// 132, # Character 0x2b (43: '+')
	// 144, # Character 0x2c (44: ',')
	// 156, # Character 0x2d (45: '-')
	// 168, # Character 0x2e (46: '.')
	// 180, # Character 0x2f (47: '/')
	// 192, # Character 0x30 (48: '0')
	// 204, # Character 0x31 (49: '1')
	// 216, # Character 0x32 (50: '2')
	// 228, # Character 0x33 (51: '3')
	// 240, # Character 0x34 (52: '4')
	// 252, # Character 0x35 (53: '5')
	// 264, # Character 0x36 (54: '6')
	// 276, # Character 0x37 (55: '7')
	// 288, # Character 0x38 (56: '8')
	// 300, # Character 0x39 (57: '9')
	// 312, # Character 0x3a (58: ':')
	// 324, # Character 0x3b (59: ';')
	// 336, # Character 0x3c (60: '<')
	// 348, # Character 0x3d (61: '=')
	// 360, # Character 0x3e (62: '>')
	// 372, # Character 0x3f (63: '?')
	// 384, # Character 0x40 (64: '@')
	// 396, # Character 0x41 (65: 'A')
	// 408, # Character 0x42 (66: 'B')
	// 420, # Character 0x43 (67: 'C')
	// 432, # Character 0x44 (68: 'D')
	// 444, # Character 0x45 (69: 'E')
	// 456, # Character 0x46 (70: 'F')
	// 468, # Character 0x47 (71: 'G')
	// 480, # Character 0x48 (72: 'H')
	// 492, # Character 0x49 (73: 'I')
	// 504, # Character 0x4a (74: 'J')
	// 516, # Character 0x4b (75: 'K')
	// 528, # Character 0x4c (76: 'L')
	// 540, # Character 0x4d (77: 'M')
	// 552, # Character 0x4e (78: 'N')
	// 564, # Character 0x4f (79: 'O')
	// 576, # Character 0x50 (80: 'P')
	// 588, # Character 0x51 (81: 'Q')
	// 600, # Character 0x52 (82: 'R')
	// 612, # Character 0x53 (83: 'S')
	// 624, # Character 0x54 (84: 'T')
	// 636, # Character 0x55 (85: 'U')
	// 648, # Character 0x56 (86: 'V')
	// 660, # Character 0x57 (87: 'W')
	// 672, # Character 0x58 (88: 'X')
	// 684, # Character 0x59 (89: 'Y')
	// 696, # Character 0x5a (90: 'Z')
	// 708, # Character 0x5b (91: '[')
	// 720, # Character 0x5c (92: '\')
	// 732, # Character 0x5d (93: ']')
	// 744, # Character 0x5e (94: '^')
	// 756, # Character 0x5f (95: '_')
	// 768, # Character 0x60 (96: '`')
	// 780, # Character 0x61 (97: 'a')
	// 792, # Character 0x62 (98: 'b')
	// 804, # Character 0x63 (99: 'c')
	// 816, # Character 0x64 (100: 'd')
	// 828, # Character 0x65 (101: 'e')
	// 840, # Character 0x66 (102: 'f')
	// 852, # Character 0x67 (103: 'g')
	// 864, # Character 0x68 (104: 'h')
	// 876, # Character 0x69 (105: 'i')
	// 888, # Character 0x6a (106: 'j')
	// 900, # Character 0x6b (107: 'k')
	// 912, # Character 0x6c (108: 'l')
	// 924, # Character 0x6d (109: 'm')
	// 936, # Character 0x6e (110: 'n')
	// 948, # Character 0x6f (111: 'o')
	// 960, # Character 0x70 (112: 'p')
	// 972, # Character 0x71 (113: 'q')
	// 984, # Character 0x72 (114: 'r')
	// 996, # Character 0x73 (115: 's')
	// 1008, # Character 0x74 (116: 't')
	// 1020, # Character 0x75 (117: 'u')
	// 1032, # Character 0x76 (118: 'v')
	// 1044, # Character 0x77 (119: 'w')
	// 1056, # Character 0x78 (120: 'x')
	// 1068, # Character 0x79 (121: 'y')
	// 1080, # Character 0x7a (122: 'z')
	// 1092, # Character 0x7b (123: '{')
	// 1104, # Character 0x7c (124: '|')
	// 1116, # Character 0x7d (125: '}')
	// 1128, # Character 0x7e (126: '~')
// ]

sFONT Font12 = {
	Font12_Table,
	7,
	12
};
